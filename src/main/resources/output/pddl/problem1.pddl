(define (problem prob-trace)
  (:domain trace-alignment)

  (:objects
    t7 t2 t6 t5 t3 t8 t1 t9 t0 t4 - trace_state
    s1_1 s1_2 s1_3 s2_1 s2_2 s2_3 s3_1 s3_2 s3_3 s4_1 s4_2 s4_3 s5_1 s5_2 s5_3 s6_1 s6_2 s6_3 s7_1 s7_2 s7_3 s8_1 s8_2 s8_3 s9_1 s9_2 s9_3 s10_1 s10_2 s10_3 s10_4 - automaton_state
    a1 a2 a10 a3 a4 a5 a6 a7 a8 a9 - activity
    categorical integer - parameter_name
    a2_b a2_c a1_a a2_a - value_name
  )
  (:init
    ;; SUBSTITUTION VARIABLES
    (= (variable_value a2_b) 2)
    (= (variable_value a2_c) 3)
    (= (variable_value a1_a) 10)
    (= (variable_value a2_a) 1)

    (has_substitution_value a2_c a2 categorical)
    (has_substitution_value a2_b a4 categorical)
    (has_substitution_value a2_a a2 categorical)
    (has_substitution_value a1_a a1 integer)
    (has_substitution_value a2_b a2 categorical)

    ;; TRACE DECLARATION
    (cur_state t0)
    (trace t0 a7 t1)
    (has_parameter a7 categorical t0 t1)
    (= (trace_parameter a7 categorical t0 t1) 1)
    (has_parameter a7 integer t0 t1)
    (= (trace_parameter a7 integer t0 t1) 13)

    (trace t1 a2 t2)
    (has_parameter a2 integer t1 t2)
    (= (trace_parameter a2 integer t1 t2) 11)
    (has_parameter a2 categorical t1 t2)
    (= (trace_parameter a2 categorical t1 t2) 1)

    (trace t2 a8 t3)
    (has_parameter a8 integer t2 t3)
    (= (trace_parameter a8 integer t2 t3) 2)
    (has_parameter a8 categorical t2 t3)
    (= (trace_parameter a8 categorical t2 t3) 3)

    (trace t3 a5 t4)
    (has_parameter a5 integer t3 t4)
    (= (trace_parameter a5 integer t3 t4) 61)
    (has_parameter a5 categorical t3 t4)
    (= (trace_parameter a5 categorical t3 t4) 3)

    (trace t4 a7 t5)
    (has_parameter a7 categorical t4 t5)
    (= (trace_parameter a7 categorical t4 t5) 1)
    (has_parameter a7 integer t4 t5)
    (= (trace_parameter a7 integer t4 t5) 12)

    (trace t5 a10 t6)
    (has_parameter a10 categorical t5 t6)
    (= (trace_parameter a10 categorical t5 t6) 3)
    (has_parameter a10 integer t5 t6)
    (= (trace_parameter a10 integer t5 t6) 11)

    (trace t6 a10 t7)
    (has_parameter a10 integer t6 t7)
    (= (trace_parameter a10 integer t6 t7) 0)
    (has_parameter a10 categorical t6 t7)
    (= (trace_parameter a10 categorical t6 t7) 3)

    (trace t7 a7 t8)
    (has_parameter a7 integer t7 t8)
    (= (trace_parameter a7 integer t7 t8) 94)
    (has_parameter a7 categorical t7 t8)
    (= (trace_parameter a7 categorical t7 t8) 1)

    (trace t8 a3 t9)
    (has_parameter a3 categorical t8 t9)
    (= (trace_parameter a3 categorical t8 t9) 1)
    (has_parameter a3 integer t8 t9)
    (= (trace_parameter a3 integer t8 t9) 4)

    ;; AUTOMATON STATES
    (cur_state s1_1)
    (automaton s1_1 a5 s1_2)
    (has_eq_c a5 categorical s1_1 s1_2)
    (= (equality_constraint a5 categorical s1_1 s1_2) 3)

    (cur_state s2_1)
    (automaton s2_1 a10 s2_2)
    (has_eq_c a10 categorical s2_1 s2_2)
    (= (equality_constraint a10 categorical s2_1 s2_2) 3)

    (cur_state s3_1)
    (automaton s3_1 a7 s3_2)
    (has_maj_c a7 integer s3_1 s3_2)
    (= (majority_constraint a7 integer s3_1 s3_2) 10)
    (has_ineq_c a7 integer s3_1 s3_2)
    (= (inequality_constraint a7 integer s3_1 s3_2) 10)

    (cur_state s4_1)
    (automaton s4_1 a1 s4_2)
    (has_maj_c a1 integer s4_1 s4_2)
    (= (majority_constraint a1 integer s4_1 s4_2) 10)
    (has_ineq_c a1 integer s4_1 s4_2)
    (= (inequality_constraint a1 integer s4_1 s4_2) 10)
    (automaton s4_2 a2 s4_1)
    (has_min_c a2 integer s4_2 s4_1)
    (= (minority_constraint a2 integer s4_2 s4_1) 10)
    (has_ineq_c a2 integer s4_2 s4_1)
    (= (inequality_constraint a2 integer s4_2 s4_1) 10)

    (cur_state s5_1)
    (automaton s5_1 a3 s5_2)
    (has_eq_c a3 categorical s5_1 s5_2)
    (= (equality_constraint a3 categorical s5_1 s5_2) 1)
    (automaton s5_2 a4 s5_1)
    (has_eq_c a4 categorical s5_2 s5_1)
    (= (equality_constraint a4 categorical s5_2 s5_1) 2)

    (cur_state s6_1)
    (automaton s6_1 a5 s6_2)
    (has_eq_c a5 categorical s6_1 s6_2)
    (= (equality_constraint a5 categorical s6_1 s6_2) 3)
    (automaton s6_2 a7 s6_1)
    (has_maj_c a7 integer s6_2 s6_1)
    (= (majority_constraint a7 integer s6_2 s6_1) 10)
    (has_ineq_c a7 integer s6_2 s6_1)
    (= (inequality_constraint a7 integer s6_2 s6_1) 10)

    (cur_state s7_1)
    (failure_state s7_3)
    (automaton s7_1 a6 s7_2)
    (has_maj_c a6 integer s7_1 s7_2)
    (= (majority_constraint a6 integer s7_1 s7_2) 10)
    (has_ineq_c a6 integer s7_1 s7_2)
    (= (inequality_constraint a6 integer s7_1 s7_2) 10)
    (automaton s7_2 a7 s7_1)
    (has_maj_c a7 integer s7_2 s7_1)
    (= (majority_constraint a7 integer s7_2 s7_1) 10)
    (has_ineq_c a7 integer s7_2 s7_1)
    (= (inequality_constraint a7 integer s7_2 s7_1) 10)
    (automaton s7_2 a7 s7_3)
    (has_min_c a7 integer s7_2 s7_3)
    (= (minority_constraint a7 integer s7_2 s7_3) 10)
    (automaton s7_2 a1 s7_3)
    (automaton s7_2 a2 s7_3)
    (automaton s7_2 a10 s7_3)
    (automaton s7_2 a3 s7_3)
    (automaton s7_2 a4 s7_3)
    (automaton s7_2 a5 s7_3)
    (automaton s7_2 a6 s7_3)
    (automaton s7_2 a7 s7_3)
    (automaton s7_2 a8 s7_3)
    (automaton s7_2 a9 s7_3)

    (cur_state s8_1)
    (failure_state s8_3)
    (automaton s8_1 a1 s8_2)
    (has_eq_c a1 categorical s8_1 s8_2)
    (= (equality_constraint a1 categorical s8_1 s8_2) 1)
    (automaton s8_2 a4 s8_1)
    (has_eq_c a4 categorical s8_2 s8_1)
    (= (equality_constraint a4 categorical s8_2 s8_1) 2)
    (automaton s8_2 a4 s8_3)
    (has_ineq_c a4 categorical s8_2 s8_3)
    (= (inequality_constraint a4 categorical s8_2 s8_3) 2)
    (automaton s8_2 a1 s8_3)
    (automaton s8_2 a2 s8_3)
    (automaton s8_2 a10 s8_3)
    (automaton s8_2 a3 s8_3)
    (automaton s8_2 a4 s8_3)
    (automaton s8_2 a5 s8_3)
    (automaton s8_2 a6 s8_3)
    (automaton s8_2 a7 s8_3)
    (automaton s8_2 a8 s8_3)
    (automaton s8_2 a9 s8_3)

    (cur_state s9_1)
    (automaton s9_1 a9 s9_2)
    (has_maj_c a9 integer s9_1 s9_2)
    (= (majority_constraint a9 integer s9_1 s9_2) 10)
    (has_ineq_c a9 integer s9_1 s9_2)
    (= (inequality_constraint a9 integer s9_1 s9_2) 10)
    (automaton s9_2 a10 s9_1)
    (has_maj_c a10 integer s9_2 s9_1)
    (= (majority_constraint a10 integer s9_2 s9_1) 10)
    (has_ineq_c a10 integer s9_2 s9_1)
    (= (inequality_constraint a10 integer s9_2 s9_1) 10)

    (cur_state s10_1)
    (failure_state s10_4)
    (automaton s10_1 a8 s10_2)
    (has_eq_c a8 categorical s10_1 s10_2)
    (= (equality_constraint a8 categorical s10_1 s10_2) 1)
    (automaton s10_1 a5 s10_3)
    (has_eq_c a5 categorical s10_1 s10_3)
    (= (equality_constraint a5 categorical s10_1 s10_3) 3)
    (automaton s10_2 a8 s10_4)
    (has_eq_c a8 categorical s10_2 s10_4)
    (= (equality_constraint a8 categorical s10_2 s10_4) 1)
    (automaton s10_3 a5 s10_4)
    (has_eq_c a5 categorical s10_3 s10_4)
    (= (equality_constraint a5 categorical s10_3 s10_4) 3)

  )
  ;; GOAL STATES
  (:goal (and
    (cur_state t9)
    (cur_state s1_2)
    (cur_state s2_2)
    (cur_state s3_2)
    (cur_state s4_1)
    (cur_state s5_1)
    (cur_state s6_1)
    (cur_state s7_1)
    (cur_state s8_1)
    (cur_state s9_1)
    (or
      (cur_state s10_2)
      (cur_state s10_3)
    )
    (not (failure))
    (not (after_change))
    (not (after_add))
    (not (after_sync))
  ))

  (:metric minimize (total_cost))
)


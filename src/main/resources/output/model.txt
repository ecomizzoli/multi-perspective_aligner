This model contains 10 activities:

a1=> My attributes are: 
integer of type integer with bounds: [0.0, 100.0]
The followings are my intervals: [(-Infinity, 0.0), [0.0, 10.0), [10.0, 10.0], (10.0, 100.0], (100.0, Infinity)]

categorical of type enum with values: [c1, c2, c3]

The followings are my partitions: {a1_p8=[10.0 <= integer <= 10.0, categorical is c3], a1_p3=[10.0 < integer <= 100.0, categorical is c1], a1_p5=[10.0 <= integer <= 10.0, categorical is c2], a1_p7=[0.0 <= integer < 10.0, categorical is c3], a1_p9=[10.0 < integer <= 100.0, categorical is c3], a1_p4=[0.0 <= integer < 10.0, categorical is c2], a1_p2=[10.0 <= integer <= 10.0, categorical is c1], a1_p1=[0.0 <= integer < 10.0, categorical is c1], a1_p6=[10.0 < integer <= 100.0, categorical is c2]}
With following costs: Add -> 1, Remove -> 1, Replace -> 1, Extra cost for wrong attributes -> 0, Extra cost for missing attributes -> 0

a2=> My attributes are: 
integer of type integer with bounds: [0.0, 100.0]
The followings are my intervals: [(-Infinity, 0.0), [0.0, 10.0), [10.0, 10.0], (10.0, 100.0], (100.0, Infinity)]

categorical of type enum with values: [c1, c2, c3]

The followings are my partitions: {a2_p9=[10.0 < integer <= 100.0, categorical is c3], a2_p3=[10.0 < integer <= 100.0, categorical is c1], a2_p7=[0.0 <= integer < 10.0, categorical is c3], a2_p5=[10.0 <= integer <= 10.0, categorical is c2], a2_p2=[10.0 <= integer <= 10.0, categorical is c1], a2_p4=[0.0 <= integer < 10.0, categorical is c2], a2_p6=[10.0 < integer <= 100.0, categorical is c2], a2_p8=[10.0 <= integer <= 10.0, categorical is c3], a2_p1=[0.0 <= integer < 10.0, categorical is c1]}
With following costs: Add -> 1, Remove -> 1, Replace -> 1, Extra cost for wrong attributes -> 0, Extra cost for missing attributes -> 0

a10=> My attributes are: 
integer of type integer with bounds: [0.0, 100.0]
The followings are my intervals: [(-Infinity, 0.0), [0.0, 10.0), [10.0, 10.0], (10.0, 100.0], (100.0, Infinity)]

categorical of type enum with values: [c1, c2, c3]

The followings are my partitions: {a10_p7=[0.0 <= integer < 10.0, categorical is c3], a10_p5=[10.0 <= integer <= 10.0, categorical is c2], a10_p9=[10.0 < integer <= 100.0, categorical is c3], a10_p1=[0.0 <= integer < 10.0, categorical is c1], a10_p3=[10.0 < integer <= 100.0, categorical is c1], a10_p6=[10.0 < integer <= 100.0, categorical is c2], a10_p8=[10.0 <= integer <= 10.0, categorical is c3], a10_p4=[0.0 <= integer < 10.0, categorical is c2], a10_p2=[10.0 <= integer <= 10.0, categorical is c1]}
With following costs: Add -> 1, Remove -> 1, Replace -> 1, Extra cost for wrong attributes -> 0, Extra cost for missing attributes -> 0

a3=> My attributes are: 
integer of type integer with bounds: [0.0, 100.0]
The followings are my intervals: [(-Infinity, 0.0), [0.0, 10.0), [10.0, 10.0], (10.0, 100.0], (100.0, Infinity)]

categorical of type enum with values: [c1, c2, c3]

The followings are my partitions: {a3_p2=[10.0 <= integer <= 10.0, categorical is c1], a3_p4=[0.0 <= integer < 10.0, categorical is c2], a3_p8=[10.0 <= integer <= 10.0, categorical is c3], a3_p7=[0.0 <= integer < 10.0, categorical is c3], a3_p1=[0.0 <= integer < 10.0, categorical is c1], a3_p3=[10.0 < integer <= 100.0, categorical is c1], a3_p5=[10.0 <= integer <= 10.0, categorical is c2], a3_p9=[10.0 < integer <= 100.0, categorical is c3], a3_p6=[10.0 < integer <= 100.0, categorical is c2]}
With following costs: Add -> 1, Remove -> 1, Replace -> 1, Extra cost for wrong attributes -> 0, Extra cost for missing attributes -> 0

a4=> My attributes are: 
integer of type integer with bounds: [0.0, 100.0]
The followings are my intervals: [(-Infinity, 0.0), [0.0, 10.0), [10.0, 10.0], (10.0, 100.0], (100.0, Infinity)]

categorical of type enum with values: [c1, c2, c3]

The followings are my partitions: {a4_p5=[10.0 <= integer <= 10.0, categorical is c2], a4_p4=[0.0 <= integer < 10.0, categorical is c2], a4_p9=[10.0 < integer <= 100.0, categorical is c3], a4_p7=[0.0 <= integer < 10.0, categorical is c3], a4_p1=[0.0 <= integer < 10.0, categorical is c1], a4_p6=[10.0 < integer <= 100.0, categorical is c2], a4_p8=[10.0 <= integer <= 10.0, categorical is c3], a4_p3=[10.0 < integer <= 100.0, categorical is c1], a4_p2=[10.0 <= integer <= 10.0, categorical is c1]}
With following costs: Add -> 1, Remove -> 1, Replace -> 1, Extra cost for wrong attributes -> 0, Extra cost for missing attributes -> 0

a5=> My attributes are: 
integer of type integer with bounds: [0.0, 100.0]
The followings are my intervals: [(-Infinity, 0.0), [0.0, 10.0), [10.0, 10.0], (10.0, 100.0], (100.0, Infinity)]

categorical of type enum with values: [c1, c2, c3]

The followings are my partitions: {a5_p3=[10.0 < integer <= 100.0, categorical is c1], a5_p8=[10.0 <= integer <= 10.0, categorical is c3], a5_p5=[10.0 <= integer <= 10.0, categorical is c2], a5_p6=[10.0 < integer <= 100.0, categorical is c2], a5_p4=[0.0 <= integer < 10.0, categorical is c2], a5_p1=[0.0 <= integer < 10.0, categorical is c1], a5_p2=[10.0 <= integer <= 10.0, categorical is c1], a5_p7=[0.0 <= integer < 10.0, categorical is c3], a5_p9=[10.0 < integer <= 100.0, categorical is c3]}
With following costs: Add -> 1, Remove -> 1, Replace -> 1, Extra cost for wrong attributes -> 0, Extra cost for missing attributes -> 0

a6=> My attributes are: 
integer of type integer with bounds: [0.0, 100.0]
The followings are my intervals: [(-Infinity, 0.0), [0.0, 10.0), [10.0, 10.0], (10.0, 100.0], (100.0, Infinity)]

categorical of type enum with values: [c1, c2, c3]

The followings are my partitions: {a6_p9=[10.0 < integer <= 100.0, categorical is c3], a6_p7=[0.0 <= integer < 10.0, categorical is c3], a6_p6=[10.0 < integer <= 100.0, categorical is c2], a6_p2=[10.0 <= integer <= 10.0, categorical is c1], a6_p4=[0.0 <= integer < 10.0, categorical is c2], a6_p1=[0.0 <= integer < 10.0, categorical is c1], a6_p8=[10.0 <= integer <= 10.0, categorical is c3], a6_p5=[10.0 <= integer <= 10.0, categorical is c2], a6_p3=[10.0 < integer <= 100.0, categorical is c1]}
With following costs: Add -> 1, Remove -> 1, Replace -> 1, Extra cost for wrong attributes -> 0, Extra cost for missing attributes -> 0

a7=> My attributes are: 
integer of type integer with bounds: [0.0, 100.0]
The followings are my intervals: [(-Infinity, 0.0), [0.0, 10.0), [10.0, 10.0], (10.0, 100.0], (100.0, Infinity)]

categorical of type enum with values: [c1, c2, c3]

The followings are my partitions: {a7_p9=[10.0 < integer <= 100.0, categorical is c3], a7_p7=[0.0 <= integer < 10.0, categorical is c3], a7_p1=[0.0 <= integer < 10.0, categorical is c1], a7_p5=[10.0 <= integer <= 10.0, categorical is c2], a7_p8=[10.0 <= integer <= 10.0, categorical is c3], a7_p3=[10.0 < integer <= 100.0, categorical is c1], a7_p6=[10.0 < integer <= 100.0, categorical is c2], a7_p2=[10.0 <= integer <= 10.0, categorical is c1], a7_p4=[0.0 <= integer < 10.0, categorical is c2]}
With following costs: Add -> 1, Remove -> 1, Replace -> 1, Extra cost for wrong attributes -> 0, Extra cost for missing attributes -> 0

a8=> My attributes are: 
integer of type integer with bounds: [0.0, 100.0]
The followings are my intervals: [(-Infinity, 0.0), [0.0, 10.0), [10.0, 10.0], (10.0, 100.0], (100.0, Infinity)]

categorical of type enum with values: [c1, c2, c3]

The followings are my partitions: {a8_p6=[10.0 < integer <= 100.0, categorical is c2], a8_p3=[10.0 < integer <= 100.0, categorical is c1], a8_p9=[10.0 < integer <= 100.0, categorical is c3], a8_p8=[10.0 <= integer <= 10.0, categorical is c3], a8_p4=[0.0 <= integer < 10.0, categorical is c2], a8_p5=[10.0 <= integer <= 10.0, categorical is c2], a8_p2=[10.0 <= integer <= 10.0, categorical is c1], a8_p7=[0.0 <= integer < 10.0, categorical is c3], a8_p1=[0.0 <= integer < 10.0, categorical is c1]}
With following costs: Add -> 1, Remove -> 1, Replace -> 1, Extra cost for wrong attributes -> 0, Extra cost for missing attributes -> 0

a9=> My attributes are: 
integer of type integer with bounds: [0.0, 100.0]
The followings are my intervals: [(-Infinity, 0.0), [0.0, 10.0), [10.0, 10.0], (10.0, 100.0], (100.0, Infinity)]

categorical of type enum with values: [c1, c2, c3]

The followings are my partitions: {a9_p7=[0.0 <= integer < 10.0, categorical is c3], a9_p5=[10.0 <= integer <= 10.0, categorical is c2], a9_p3=[10.0 < integer <= 100.0, categorical is c1], a9_p9=[10.0 < integer <= 100.0, categorical is c3], a9_p8=[10.0 <= integer <= 10.0, categorical is c3], a9_p1=[0.0 <= integer < 10.0, categorical is c1], a9_p6=[10.0 < integer <= 100.0, categorical is c2], a9_p2=[10.0 <= integer <= 10.0, categorical is c1], a9_p4=[0.0 <= integer < 10.0, categorical is c2]}
With following costs: Add -> 1, Remove -> 1, Replace -> 1, Extra cost for wrong attributes -> 0, Extra cost for missing attributes -> 0

This model contains following constraints:
[template=Existence, activationActivity=a5, activationCondition=A.categorical is c3 , targetActivity=null, targetCondition=null]
[template=Existence, activationActivity=a10, activationCondition=A.categorical is c3 , targetActivity=null, targetCondition=null]
[template=Existence, activationActivity=a7, activationCondition=A.integer > 10 , targetActivity=null, targetCondition=null]
[template=Response, activationActivity=a1, activationCondition=A.integer > 10 , targetActivity=a2, targetCondition=T.integer < 10 ]
[template=Response, activationActivity=a3, activationCondition=A.categorical is c1 , targetActivity=a4, targetCondition=T.categorical is c2 ]
[template=Response, activationActivity=a5, activationCondition=A.categorical is c3 , targetActivity=a7, targetCondition=T.integer > 10 ]
[template=Chain_Response, activationActivity=a6, activationCondition=A.integer > 10 , targetActivity=a7, targetCondition=T.integer > 10 ]
[template=Chain_Response, activationActivity=a1, activationCondition=A.categorical is c1 , targetActivity=a4, targetCondition=T.categorical is c2 ]
[template=Response, activationActivity=a9, activationCondition=A.integer > 10 , targetActivity=a10, targetCondition=T.integer > 10 ]
[template=Exclusive_Choice, activationActivity=a8, activationCondition=A.categorical is c1 , targetActivity=a5, targetCondition=T.categorical is c3 ]
